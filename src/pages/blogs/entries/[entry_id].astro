---
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';

import type { BlogEntry } from '@/lib/contentful';
import { contentfulClient, renderImageOption } from '@/lib/contentful';
import Layout from '@/layouts/Layout.astro';
import Breadcrumbs from '@/components/Breadcrumbs.astro';

export async function getStaticPaths() {
  const blogEntries = await contentfulClient.getEntries<BlogEntry>({
    content_type: 'blog_entries',
  });

  const pages = blogEntries.items.map((item) => ({
    params: {
      /** 記事ID */
      entry_id: item.fields.entry_id,
    },
    props: {
      /** 記事タイトル */
      entryTitle: item.fields.entry_title,
      /** 記事本文 */
      entryBody: documentToHtmlString(
        item.fields.entry_body,
        renderImageOption,
      ),
      /** アイキャッチ画像 */
      // any型にしないと動かない
      // biome-ignore lint/suspicious/noExplicitAny: <explanation>
      eyecatch: item.fields.eyecatch as any,
      /** 記事の概要 */
      description: item.fields.description,
      /** 公開日(ドラフト版の場合は更新日時) */
      // any型にしないと動かない
      // biome-ignore lint/suspicious/noExplicitAny: <explanation>
      publishedAt: (item as any).sys.publishedAt
        ? // any型にしないと動かない
          // biome-ignore lint/suspicious/noExplicitAny: <explanation>
          new Date((item as any).sys.publishedAt)
        : new Date(item.sys.createdAt),
      /** ロケール */
      locale: item.sys.locale ? item.sys.locale : 'ja-JP',
    },
  }));

  return pages;
}

const { entryTitle, entryBody, eyecatch, description, publishedAt, locale } =
  Astro.props;
---

<Layout title={entryTitle} desctiption={description}>
  <section class=`grid grid-flow-row ${eyecatch ? 'grid-rows-[auto_auto_auto_auto_1fr]' : 'grid-rows-[auto_auto_auto_1fr]'}`>{/* アイキャッチがない場合、DOMの数が一つ少ない */}
    <Breadcrumbs currentPageName={entryTitle} paths={[{pageName: 'ブログ記事一覧', relativePath: '/blogs/1'}]} />
    {
      eyecatch&&(
        <div class="mb-4">
          <img src={eyecatch.fields.file.url} alt={
            eyecatch.fields.desctiption
            ? eyecatch.fields.description
            : eyecatch.fields.title
              ? eyecatch.fields.title
              : "アイキャッチ"
            }
            width={eyecatch.fields.file.details.image.width} />
        </div>
      )
    }
    <h1 class="entry_title px-2 md:px-8">{entryTitle}</h1>{/* 記事のタイトル */}
    <p class="px-2 md:px-8 text-neutral-600">
      {/* 公開日 */}
      公開日:&nbsp;
      <time datetime={publishedAt.toISOString()} itemprop="entryPublished">{publishedAt.toLocaleDateString(locale)}</time>
    </p>
    <article set:html={entryBody} class="blog_entry" />{/* ブログ記事 */}
  </section>
</Layout>

<style is:global>
  /* ブログ記事 */
  .blog_entry {
    @apply px-2 md:px-8
  }
  /* ブログ記事タイトル、ブログ記事 - 見出し1 */
  .entry_title,
  .blog_entry h1 {
    @apply text-5xl font-extrabold mt-2 mb-4
  }
  /* ブログ記事 - 見出し2 */
  .blog_entry h2 {
    @apply text-4xl font-extrabold mt-2 mb-4
  }
  /* ブログ記事 - 見出し3 */
  .blog_entry h3 {
    @apply text-3xl font-extrabold mt-1 mb-2
  }
  /* ブログ記事 - 見出し4 */
  .blog_entry h4 {
    @apply text-2xl font-extrabold
  }
  /* ブログ記事 - 見出し5 */
  .blog_entry h5 {
    @apply text-xl font-extrabold
  }
  /* ブログ記事 - 見出し6 */
  .blog_entry h6 {
    @apply text-lg font-extrabold
  }
  /* ブログ記事 - 段落 */
  .blog_entry p {
    @apply my-2
  }
  /* ブログ記事 - 順序なしリスト */
  .blog_entry ul {
    @apply list-disc ml-6 my-4
  }
  /* ブログ記事 - 順序ありリスト */
  .blog_entry ol {
    @apply list-decimal ml-6 my-4
  }
  /* ブログ記事 - ブロック */
  .blog_entry blockquote {
    @apply bg-gray-200 px-2 py-1
  }
  /* ブログ記事 - 水平線 */
  .blog_entry hr {
    @apply my-4
  }
  /* ブログ記事 - 表 */
  .blog_entry table {
    @apply table border my-2
  }
  /* ブログ記事 - 画像 */
  .blog_entry img {
    @apply w-2/3 m-auto
  }
  /* ブログ記事 - リンク */
  .blog_entry a {
    @apply link link-hover text-indigo-700
  }
  /* ブログ記事 - リンク(訪問済み) */
  .blog_entry a:visited {
    @apply text-purple-700
  }
</style>