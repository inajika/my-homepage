---
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';

import type { BlogEntry } from '@/lib/contentful';
import { contentfulClient, renderImageOption } from '@/lib/contentful';
import ArticleLayout from '@/layouts/ArticleLayout.astro';
import Breadcrumbs from '@/components/Breadcrumbs.astro';

export async function getStaticPaths() {
  const blogEntries = await contentfulClient.getEntries<BlogEntry>({
    content_type: 'blog_entries',
  });

  const pages = blogEntries.items.map((item) => ({
    params: {
      /** 記事ID */
      entry_id: item.fields.entry_id,
    },
    props: {
      /** 記事タイトル */
      entryTitle: item.fields.entry_title,
      /** 記事本文 */
      entryBody: documentToHtmlString(
        item.fields.entry_body,
        renderImageOption,
      ),
      /** アイキャッチ画像 */
      // biome-ignore lint/suspicious/noExplicitAny: any型にしないと動かない
      eyecatch: item.fields.eyecatch as any,
      /** 記事の概要 */
      description: item.fields.description,
      /** 公開日(ドラフト版の場合は更新日時) */
      // biome-ignore lint/suspicious/noExplicitAny: any型にしないと動かない
      publishedAt: (item as any).sys.publishedAt
        ? // biome-ignore lint/suspicious/noExplicitAny: any型にしないと動かない
          new Date((item as any).sys.publishedAt)
        : new Date(item.sys.createdAt),
      /** ロケール */
      locale: item.sys.locale ? item.sys.locale : 'ja-JP',
    },
  }));

  return pages;
}

const { entryTitle, entryBody, eyecatch, description, publishedAt, locale } =
  Astro.props;
---

<ArticleLayout title={entryTitle} desctiption={description}>
  <section class=`grid grid-flow-row ${eyecatch ? 'grid-rows-[auto_auto_auto_auto_1fr]' : 'grid-rows-[auto_auto_auto_1fr]'}`>{/* アイキャッチがない場合、DOMの数が一つ少ない */}
    <Breadcrumbs currentPageName={entryTitle} paths={[{pageName: 'ブログ記事一覧', relativePath: '/blogs/1/'}]} />
    {
      eyecatch&&(
        <div class="mb-4">
          <img src={eyecatch.fields.file.url} alt={
            eyecatch.fields.desctiption
            ? eyecatch.fields.description
            : eyecatch.fields.title
              ? eyecatch.fields.title
              : "アイキャッチ"
            }
            width={eyecatch.fields.file.details.image.width} />
        </div>
      )
    }
    <h1 class="entry_title px-2 md:px-8">{entryTitle}</h1>{/* 記事のタイトル */}
    <p class="px-2 md:px-8 text-neutral-600">
      {/* 公開日 */}
      公開日:&nbsp;
      <time datetime={publishedAt.toISOString()} itemprop="entryPublished">{publishedAt.toLocaleDateString(locale)}</time>
    </p>
    <article set:html={entryBody} class="blog_entry px-2 md:px-8" />{/* ブログ記事 */}
  </section>
</ArticleLayout>
